# -*- coding: utf-8 -*-
import telebot
from telebot import types
import my_markups
import dbhelp
import config_for_token
import time
import logging
# todo: —à–∞–±–ª–æ–Ω—ã –æ–±—â–µ–Ω–∏—è, –±–¥(—É—Ç–æ—á–Ω–∏—Ç—å), —É–∑–Ω–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ, –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞, —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

bot = telebot.TeleBot(config_for_token.token)  # —Ç–æ–∫–µ–Ω —Å–ø—Ä—è—Ç–∞–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ

# bot - @


@bot.message_handler(commands=['start'])
def send_welcome(message):
    ccid = message.chat.id
    cb = 0
    for u in dbhelp.User.select():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if str(u.id) == str(ccid):
            cb = 1
    if cb == 0:  # –î–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
        new_user = dbhelp.User(id=ccid, phone='none', send_phone='0')
        new_user.save(force_insert=True)
    bot.send_message(ccid, 'ü§ñ–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –±–æ—Ç ...', reply_markup=my_markups.main_menu)  # –¥–æ–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏—Ä–º—ã


@bot.message_handler(content_types=['contact'])  # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞
def contact(message):
    ccid = message.chat.id
    enter_phone = 0
    for u in dbhelp.User.select():
        if str(u.id) == str(ccid):
            if u.send_phone == '1':
                enter_phone = 1
    if enter_phone == 1:
        for u in dbhelp.User.select():
            if str(u.id) == str(ccid):
                u.phone = message.contact.phone_number
                u.send_phone = '0'
                u.save()
                id_count = 0
                for u in dbhelp.Order.select():
                    id_count += 1
                new_order = dbhelp.Order(id=id_count, user='{}'.format(ccid), phone='{}'.format(message.contact.phone_number), type='0')
                new_order.save(force_insert=True)
                bot.send_message(message.chat.id, '‚úÖ–ó–≤–æ–Ω–æ–∫ –∑–∞–∫–∞–∑–∞–Ω, –í–∞–º –ø–æ–∑–≤–æ–Ω—è—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 10-15 –º–∏–Ω—É—Ç', reply_markup=my_markups.main_menu)
                bot.send_message(config_for_token.id_manager, '‚úÖ–ó–∞–∫–∞–∑–∞–Ω –∑–≤–æ–Ω–æ–∫: {}'.format(message.contact.phone_number))  # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–≤–æ–Ω–∫–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É


@bot.message_handler(content_types=['text'])  # –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
def main(message):
    ccid = message.chat.id
    send_phone = 0
    if message.text == 'üö™–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' or message.text == 'üö™–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        for u in dbhelp.User.select():  # –û—á–∏—â–∞–µ–º –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            if str(u.id) == str(ccid):
                u.send_phone = '0'
                u.save()
        bot.send_message(ccid, 'üö™–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=my_markups.main_menu)
    elif message.text == 'üì±–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫':
        for u in dbhelp.User.select():
            if str(u.id) == str(ccid):
                u.send_phone = '1'
                u.save()
        bot.send_message(ccid, 'üì±–û—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞(–≤—Ä—É—á–Ω—É—é –∏–ª–∏ –∫–Ω–æ–ø–∫–æ–π), —á—Ç–æ–±—ã –º–µ–Ω–µ–¥–∂–µ—Ä —Å–º–æ–≥ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –í–∞–º–∏', reply_markup=my_markups.phone_page)
    else:
        for u in dbhelp.User.select():
            if str(u.id) == str(ccid):
                if u.send_phone == '1':
                    send_phone = 1
        if send_phone == 1:
            for u in dbhelp.User.select():
                if str(u.id) == str(ccid):
                    u.phone = message.text
                    u.send_phone = '0'
                    u.save()
                    id_count = 0
                    for u in dbhelp.Order.select():
                        id_count += 1
                    new_order = dbhelp.Order(id=id_count, user='{}'.format(ccid), phone='{}'.format(message.text), type='0')
                    new_order.save(force_insert=True)
                    bot.send_message(message.chat.id, '‚úÖ–ó–≤–æ–Ω–æ–∫ –∑–∞–∫–∞–∑–∞–Ω, –í–∞–º –ø–æ–∑–≤–æ–Ω—è—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 10-15 –º–∏–Ω—É—Ç', reply_markup=my_markups.main_menu)
                    bot.send_message(config_for_token.id_manager, '‚úÖ–ó–∞–∫–∞–∑–∞–Ω –∑–≤–æ–Ω–æ–∫: {}'.format(message.text))  # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–≤–æ–Ω–∫–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É


while True:
    try:
        bot.polling(none_stop=True)

    except Exception as err:
        logging.error(err)
        time.sleep(5)
        print('Internet error')
